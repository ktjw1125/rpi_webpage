name: Copy index.html to Server

# index.html 파일이 변경될 때만 워크플로우를 실행하도록 설정
on:
  push:
    paths:
      - 'index.html'  # 변경된 파일 경로
  workflow_dispatch:  # 수동 실행을 위한 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions의 Ubuntu 환경에서 실행

    env:
      SERVER_IP: 211.201.153.117
      SERVER_PORT: 8002
      SERVER_USERNAME: jwrpicli

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # 리포지토리를 체크아웃

      - name: Set up SSH key for server access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # 비공개 키를 저장
          chmod 600 ~/.ssh/id_rsa  # 비공개 키의 권한 설정
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts  # 권한 설정
          ssh-keyscan -H -p ${{ env.SERVER_PORT }} ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts || echo "Failed to add SSH key"  # 서버의 SSH 키를 known_hosts에 추가
          cat ~/.ssh/known_hosts  # known_hosts 파일 내용 확인
          echo "${{ secrets.SSH_PUBLIC_KEY }}" >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          cat ~/.ssh/authorized_keys
          ls -l /etc/ssh/
          cat /etc/ssh/ssh_config
          cat /etc/ssh/sshd_config
        
      - name: Copy index.html to the server
        run: |
          # 서버에 파일을 복사
          scp -v -o StrictHostKeyChecking=no -P ${{ env.SERVER_PORT }} index.html ${{ env.SERVER_USERNAME }}@${{ env.SERVER_IP }}:/var/www/html/
          
          # 파일 복사가 완료되었는지 확인 (서버에서 ls 명령어로 확인)
          ssh -v -o StrictHostKeyChecking=no -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USERNAME }}@${{ env.SERVER_IP }} "ls -l /var/www/html/"
